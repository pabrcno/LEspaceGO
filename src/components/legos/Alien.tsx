/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/
import * as THREE from "three";
import React, { useEffect, useRef } from "react";
import { useGLTF } from "@react-three/drei";
import { GLTF } from "three-stdlib";
import { useBox } from "@react-three/cannon";
type GLTFResult = GLTF & {
  nodes: {
    Object_1: THREE.Mesh;
    Object_1_1: THREE.Mesh;
    Object_1_2: THREE.Mesh;
  };
  materials: {
    DarkMetal: THREE.MeshStandardMaterial;
    LightMEtal: THREE.MeshStandardMaterial;
    Glass: THREE.MeshStandardMaterial;
  };
};

export function Alien(props: JSX.IntrinsicElements["group"]) {
  const { nodes, materials } = useGLTF("/meshes/alien.glb") as GLTFResult;

  return (
    <group {...props} dispose={null}>
      <group>
        <mesh
          geometry={nodes.Object_1.geometry}
          material={materials.DarkMetal}
        />
        <mesh
          geometry={nodes.Object_1_1.geometry}
          material={materials.LightMEtal}
        />
        <mesh geometry={nodes.Object_1_2.geometry} material={materials.Glass} />
      </group>
    </group>
  );
}

useGLTF.preload("/alien.glb");
